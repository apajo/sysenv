#!/bin/bash

source /etc/sysenv/bin/common


puke(){
    # function to exit with specific error message
    # analogous to 'die' in Perl
    printf ">>> Errors were encountered: %s\n" "$*" && exit
} > /dev/stderr

dialog_action(){
    # dialog --help documents the option as follows:
    # --checklist    <text> <height> <width> <list height> <tag1> <item1> <status1>...
    # tags are what the output returns.
    # We can use word-splitting
    # and iterate over output of this function in order. Of course first option
    # being checksum will always work and is not mutually exclusive with anything else
    dialog --clear --backtitle "Backtitle. Use <SPACE> to select." --title "My Dialog" \
           --extra-button --extra-label 'Select All' --cancel-label 'Select None' \
           --checklist "Select all that apply"  50 50 100 \
           install "Install packages" on \
           config "Import config" off \
           move "Move only (exclusive with copy)" off || puke

} 2>&1 1>/dev/tty

dialog_alert(){
      dialog --msgbox "$*" 0 0 || puke
} 2>&1 1>/dev/tty

dialog_confirm(){
      dialog --default-button "no" \
        --no-label "Cancel" \
        --yes-label "OK" \
        --yesno "$*" 0 0 || puke
} 2>&1 1>/dev/tty

dialog_prompt(){
    dialog --inputbox "$*" \
           0 0 || puke
} 2>&1 1>/dev/tty

select_file(){
    dialog --backtitle "Choose file by typing or navigating and selecting with <SPACE>" --fselect $1 \
           20 50  || puke
} 2>&1 1>/dev/tty

select_files(){
    options=$(find $1 -type f -name '*' | awk '{print $1, "on"}')

    dialog --no-items --separate-output \
        --ok-label "Select" \
        --checklist "Select options:" 22 76 16 \
        $options || puke
} 2>&1 1>/dev/tty

select_array(){
    dialog --no-items \
        --ok-label "$1" \
        --checklist "Select options:" 22 76 16 \
        $2 || puke
} 2>&1 1>/dev/tty
